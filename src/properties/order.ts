import REGEXP from '../utils/regexps.ts';

import deprecated from './deprecated.ts';
import experimental from './experimental.ts';
import nonStandard from './non-standard.ts';

import createAtRule from '../creators/at-rule.ts';
import createLogicalGroup from '../creators/logical-group.ts';
import createRule from '../creators/rule.ts';

const experimentPseudoElement = experimental.pseudo.element;
const experimentPseudoElementMozilla = experimental.pseudo.element.moz;
const experimentPseudoElementWebkit = experimental.pseudo.element.webkit;
const nonStandardPseudoElementMozilla = nonStandard.pseudo.element.moz;
const nonStandardPseudoElementWebkit = nonStandard.pseudo.element.webkit;

const experimentalPseudoClass = experimental.pseudo.class;
const nonStandardPseudoClassMozilla = nonStandard.pseudo.class.moz;

const deprecatedProperty = deprecated.property;
const experimentalProperty = experimental.property;
const nonStandardProperty = nonStandard.property;

const propertiesOrder = {
  'order/order': [
    'custom-properties',
    'dollar-variables',
    createAtRule('include', false),
    'declarations',
    createRule('::selection'),
    createRule('::backdrop'),
    createRule('::before'),
    createRule('::after'),
    createRule('::marker'),
    createRule('::first-line'),
    createRule('::first-letter'),
    createRule('::cue'),
    createRule('::cue-region'),
    createRule('::placeholder'),
    createRule('::file-selector-button'),
    createRule('::highlight'),
    createRule('::part'),
    createRule('::slotted'),
    createRule(experimentPseudoElement.targetText),
    createRule(experimentPseudoElement.error.spelling),
    createRule(experimentPseudoElement.error.grammar),
    createRule(experimentPseudoElement.viewTransition),
    createRule(experimentPseudoElement.view.transition.group),
    createRule(experimentPseudoElement.view.transition.imagePair),
    createRule(experimentPseudoElement.view.transition.new),
    createRule(experimentPseudoElement.view.transition.old),
    createRule(experimentPseudoElementWebkit.slider.runnableTrack),
    createRule(experimentPseudoElementWebkit.slider.thumb),
    createRule(experimentPseudoElementMozilla.focusInner),
    createRule(nonStandardPseudoElementWebkit.innerSpinButton),
    createRule(nonStandardPseudoElementWebkit.meter.bar),
    createRule(nonStandardPseudoElementWebkit.meter.value.evenLessGood),
    createRule(nonStandardPseudoElementWebkit.meter.innerElement),
    createRule(nonStandardPseudoElementWebkit.meter.value.optimum),
    createRule(nonStandardPseudoElementWebkit.meter.value.subOptimum),
    createRule(nonStandardPseudoElementWebkit.progress.bar),
    createRule(nonStandardPseudoElementWebkit.progress.innerElement),
    createRule(nonStandardPseudoElementWebkit.progress.value),
    createRule(nonStandardPseudoElementWebkit.scrollbar),
    createRule(nonStandardPseudoElementWebkit.search.button.results),
    createRule(nonStandardPseudoElementWebkit.search.button.cancel),
    createRule(nonStandardPseudoElementMozilla.colorSwatch),
    createRule(nonStandardPseudoElementMozilla.list.bullet),
    createRule(nonStandardPseudoElementMozilla.list.number),
    createRule(nonStandardPseudoElementMozilla.page),
    createRule(nonStandardPseudoElementMozilla.pageSequence),
    createRule(nonStandardPseudoElementMozilla.pageSequence),
    createRule(nonStandardPseudoElementMozilla.progressBar),
    createRule(nonStandardPseudoElementMozilla.range.track),
    createRule(nonStandardPseudoElementMozilla.range.progress),
    createRule(nonStandardPseudoElementMozilla.range.thumb),
    createRule(nonStandardPseudoElementMozilla.scrolledPageSequence),
    createRule(':root'),
    createRule(':lang'),
    createRule(':scope'),
    createRule(':modal'),
    createRule(':past'),
    createRule(':current'),
    createRule(':future'),
    createRule(':where'),
    createRule(':is'),
    createRule(':has'),
    createRule(':not'),
    createRule(':empty'),
    createRule(':target'),
    createRule(':link'),
    createRule(':local-link'),
    createRule(':any-link'),
    createRule(':defined'),
    createRule(':buffering'),
    createRule(':placeholder-shown'),
    createRule(':right'),
    createRule(':left'),
    createRule(':host'),
    createRule(':host-content'),
    createRule(':only-of-type'),
    createRule(':first-of-type'),
    createRule(':nth-of-type'),
    createRule(':last-of-type'),
    createRule(':nth-last-of-type'),
    createRule(':only-child'),
    createRule(':first'),
    createRule(':first-child'),
    createRule(':nth-child'),
    createRule(':last-child'),
    createRule(':nth-last-child'),
    createRule(experimentalPseudoClass.targetWithin),
    createRule(experimentalPseudoClass.blank),
    createRule(':default'),
    createRule(':enabled'),
    createRule(':disabled'),
    createRule(':hover'),
    createRule(':focus'),
    createRule(':focus-within'),
    createRule(':focus-visible'),
    createRule(':active'),
    createRule(':checked'),
    createRule(':visited'),
    createRule(':indeterminate'),
    createRule(':in-range'),
    createRule(':out-of-range'),
    createRule(':valid'),
    createRule(':invalid'),
    createRule(':user-valid'),
    createRule(':user-invalid'),
    createRule(':read-only'),
    createRule(':read-write'),
    createRule(':optional'),
    createRule(':required'),
    createRule(':popover-open'),
    createRule(':fullscreen'),
    createRule(':picture-in-picture'),
    createRule(':autofill'),
    createRule(':playing'),
    createRule(':paused'),
    createRule(':stalled'),
    createRule(':muted'),
    createRule(':volume-locked'),
    createRule(':seeking'),
    createRule(nonStandardPseudoClassMozilla.broken),
    createRule(nonStandardPseudoClassMozilla.dragOver),
    createRule(nonStandardPseudoClassMozilla.node.first),
    createRule(nonStandardPseudoClassMozilla.node.last),
    createRule(nonStandardPseudoClassMozilla.handler.blocked),
    createRule(nonStandardPseudoClassMozilla.handler.crashed),
    createRule(nonStandardPseudoClassMozilla.handler.disabled),
    createRule(nonStandardPseudoClassMozilla.loading),
    createRule(nonStandardPseudoClassMozilla.localeDir),
    createRule(nonStandardPseudoClassMozilla.onlyWhitespace),
    createRule(nonStandardPseudoClassMozilla.submitInvalid),
    createRule(nonStandardPseudoClassMozilla.suppressed),
    createRule(nonStandardPseudoClassMozilla.userDisabled),
    createRule(nonStandardPseudoClassMozilla.windowInactive),
    createRule(REGEXP.NESTED.ATTRIBUTE),
    createRule(REGEXP.NESTED.CLASS),
    createRule(REGEXP.NESTED.MODIFIER),
    createRule(REGEXP.NESTED.ELEMENT),
    createRule(REGEXP.CHILD.ATTRIBUTE),
    createRule(REGEXP.CHILD.CLASS),
    'rules',
    createAtRule('include', true),
    'at-rules',
  ],
  'order/properties-order': [
    [
      createLogicalGroup('All', ['all', 'page']),
      createLogicalGroup('Print', [
        'break-before',
        'break-inside',
        'break-after',
        'orphans',
        'widows',
      ]),
      createLogicalGroup('Actions', [
        'cursor',
        'pointer-events',
        'touch-action',
        'resize',
        nonStandardProperty.zoom,
      ]),
      createLogicalGroup('User Actions', ['user-select', 'user-zoom']),
      createLogicalGroup('Content', ['content', 'quotes']),
      createLogicalGroup('Counter', [
        'counter-increment',
        'counter-set',
        'counter-reset',
      ]),
      createLogicalGroup('List', [
        'list-style',
        'list-style-type',
        'list-style-position',
        'list-style-image',
      ]),
      createLogicalGroup('Marker', [
        'marker',
        'marker-start',
        'marker-mid',
        'marker-end',
      ]),
      createLogicalGroup('Display', [
        'display',
        'opacity',
        'isolation',
        'visibility',
        'backface-visibility',
        'appearance',
        experimentalProperty.contentVisibility,
      ]),
      createLogicalGroup('Position', [
        'position',
        deprecatedProperty.float,
        deprecatedProperty.clear,
        'offset',
        'offset-position',
        'offset-path',
        'offset-distance',
        'offset-rotate',
        'offset-anchor',
        'inset',
        'inset-block',
        'inset-block-start',
        'inset-block-end',
        'inset-inline',
        'inset-inline-start',
        'inset-inline-end',
        deprecatedProperty.top,
        deprecatedProperty.right,
        deprecatedProperty.bottom,
        deprecatedProperty.left,
        'z-index',
      ]),
      createLogicalGroup('Outline', [
        'outline',
        'outline-width',
        'outline-style',
        'outline-color',
        'outline-offset',
      ]),
      createLogicalGroup('Shape', [
        'shape-outside',
        'shape-margin',
        'shape-image-threshold',
      ]),
      createLogicalGroup('Mask', [
        'mask',
        'mask-border',
        'mask-border-source',
        'mask-border-slice',
        'mask-border-width',
        'mask-border-outset',
        'mask-border-repeat',
        'mask-border-mode',
        'mask-image',
        'mask-clip',
        'mask-origin',
        'mask-type',
        'mask-size',
        'mask-position',
        'mask-repeat',
        'mask-mode',
        'mask-composite',
      ]),
      createLogicalGroup('Margin', [
        'margin',
        'margin-block',
        'margin-block-start',
        'margin-block-end',
        'margin-inline',
        'margin-inline-start',
        'margin-inline-end',
        deprecatedProperty.margin.top,
        deprecatedProperty.margin.right,
        deprecatedProperty.margin.bottom,
        deprecatedProperty.margin.left,
        experimentalProperty.marginTrim,
      ]),
      createLogicalGroup('Border', [
        'border',
        'border-width',
        'border-style',
        'border-color',
        'border-radius',
        'border-start-start-radius',
        'border-start-end-radius',
        'border-end-start-radius',
        'border-end-end-radius',
        'border-block',
        'border-block-width',
        'border-block-style',
        'border-block-color',
        'border-block-start',
        'border-block-start-width',
        'border-block-start-style',
        'border-block-start-color',
        'border-block-end',
        'border-block-end-width',
        'border-block-end-style',
        'border-block-end-color',
        'border-inline',
        'border-inline-width',
        'border-inline-style',
        'border-inline-color',
        'border-inline-start',
        'border-inline-start-width',
        'border-inline-start-style',
        'border-inline-start-color',
        'border-inline-end',
        'border-inline-end-width',
        'border-inline-end-style',
        'border-inline-end-color',
        deprecatedProperty.borderTop,
        deprecatedProperty.border.top.leftRadius,
        deprecatedProperty.border.top.rightRadius,
        deprecatedProperty.border.top.width,
        deprecatedProperty.border.top.style,
        deprecatedProperty.border.top.color,
        deprecatedProperty.borderRight,
        deprecatedProperty.border.right.width,
        deprecatedProperty.border.right.style,
        deprecatedProperty.border.right.color,
        deprecatedProperty.borderBottom,
        deprecatedProperty.border.bottom.leftRadius,
        deprecatedProperty.border.bottom.rightRadius,
        deprecatedProperty.border.bottom.width,
        deprecatedProperty.border.bottom.style,
        deprecatedProperty.border.bottom.color,
        deprecatedProperty.borderLeft,
        deprecatedProperty.border.left.width,
        deprecatedProperty.border.left.style,
        deprecatedProperty.border.left.color,
        'border-image',
        'border-image-source',
        'border-image-slice',
        'border-image-width',
        'border-image-outset',
        'border-image-repeat',
      ]),
      createLogicalGroup('Box', [
        'box-sizing',
        'box-decoration-break',
        'box-shadow',
      ]),
      createLogicalGroup('Object', ['object-fit', 'object-position']),
      createLogicalGroup('container', [
        'container',
        'container-name',
        'container-type',
      ]),
      createLogicalGroup('Contain', [
        'contain',
        'contain-intrinsic-size',
        'contain-intrinsic-block-size',
        'contain-intrinsic-inline-size',
        deprecatedProperty.contain.intrinsic.height,
        deprecatedProperty.contain.intrinsic.width,
      ]),
      createLogicalGroup('Dimensions', [
        'aspect-ratio',
        'block-size',
        'min-block-size',
        'max-block-size',
        'inline-size',
        'min-inline-size',
        'max-inline-size',
        deprecatedProperty.height,
        deprecatedProperty.min.height,
        deprecatedProperty.max.height,
        deprecatedProperty.width,
        deprecatedProperty.min.width,
        deprecatedProperty.max.width,
      ]),
      createLogicalGroup('Padding', [
        'padding',
        'padding-block',
        'padding-block-start',
        'padding-block-end',
        'padding-inline',
        'padding-inline-start',
        'padding-inline-end',
        deprecatedProperty.padding.top,
        deprecatedProperty.padding.right,
        deprecatedProperty.padding.bottom,
        deprecatedProperty.padding.left,
      ]),
      createLogicalGroup('Overflow', [
        'overflow',
        'overflow-clip-margin',
        'overflow-block',
        'overflow-inline',
        deprecatedProperty.overflow.y,
        deprecatedProperty.overflow.x,
        'overflow-wrap',
        'overflow-anchor',
      ]),
      createLogicalGroup('Overscroll', [
        'overscroll-behavior',
        'overscroll-behavior-block',
        'overscroll-behavior-inline',
        deprecatedProperty.overscroll.behavior.y,
        deprecatedProperty.overscroll.behavior.x,
      ]),
      createLogicalGroup('Scroll', [
        'scroll-margin',
        'scroll-margin-block',
        'scroll-margin-block-start',
        'scroll-margin-block-end',
        'scroll-margin-inline',
        'scroll-margin-inline-start',
        'scroll-margin-inline-end',
        deprecatedProperty.scroll.margin.top,
        deprecatedProperty.scroll.margin.right,
        deprecatedProperty.scroll.margin.bottom,
        deprecatedProperty.scroll.margin.left,
        'scroll-padding',
        'scroll-padding-block',
        'scroll-padding-block-start',
        'scroll-padding-block-end',
        'scroll-padding-inline',
        'scroll-padding-inline-start',
        'scroll-padding-inline-end',
        deprecatedProperty.scroll.padding.top,
        deprecatedProperty.scroll.padding.right,
        deprecatedProperty.scroll.padding.bottom,
        deprecatedProperty.scroll.padding.left,
        'scroll-snap-type',
        'scroll-snap-align',
        'scroll-snap-stop',
        'scroll-behavior',
        experimentalProperty.scroll.timeline,
        experimentalProperty.scroll.timelineName,
        experimentalProperty.scroll.timelineAxis,
      ]),
      createLogicalGroup('Scrollbar', [
        'scrollbar-gutter',
        'scrollbar-width',
        'scrollbar-color',
      ]),
      createLogicalGroup('Columns', [
        'columns',
        'column-width',
        'column-count',
        'column-fill',
        'column-span',
        'column-rule',
        'column-rule-width',
        'column-rule-style',
        'column-rule-color',
      ]),
      createLogicalGroup('Grid', [
        'grid',
        'grid-area',
        'grid-template',
        'grid-template-areas',
        'grid-template-columns',
        'grid-template-rows',
        'grid-auto-flow',
        'grid-auto-columns',
        'grid-column',
        'grid-column-start',
        'grid-column-end',
        'grid-auto-rows',
        'grid-row',
        'grid-row-start',
        'grid-row-end',
        'gap',
        'column-gap',
        'row-gap',
        experimentalProperty.masonryAutoFlow,
      ]),
      createLogicalGroup('Flex', [
        'flex',
        'flex-grow',
        'flex-shrink',
        'flex-basis',
        'flex-flow',
        'flex-direction',
        'flex-wrap',
        'order',
      ]),
      createLogicalGroup('Table', [
        'table-layout',
        'border-spacing',
        'border-collapse',
        'empty-cells',
        'vertical-align',
        'caption-side',
      ]),
      createLogicalGroup('Alignment', [
        'place-content',
        'place-items',
        'place-self',
        experimentalProperty.tracks.align,
        'align-content',
        'align-items',
        'align-self',
        experimentalProperty.tracks.justify,
        'justify-content',
        'justify-items',
        'justify-self',
      ]),
      createLogicalGroup('Image', [
        'image-orientation',
        'image-rendering',
        experimentalProperty.imageResolution,
      ]),
      createLogicalGroup('Typography', [
        'unicode-bidi',
        'unicode-range',
        'tab-size',
        'direction',
        'writing-mode',
        'white-space',
        experimentalProperty.whiteSpaceCollapse,
        'ruby-position',
        experimentalProperty.rubyAlign,
        'line-break',
        'line-height',
        experimentalProperty.lineHeightStep,
        'word-spacing',
        'word-wrap',
        'word-break',
        experimentalProperty.initial.letter,
        experimentalProperty.initial.letterAlign,
        'letter-spacing',
        'hyphens',
        'hyphenate-character',
        'hyphenate-limit-chars',
        'hanging-punctuation',
      ]),
      createLogicalGroup('Text', [
        'text-overflow',
        'text-rendering',
        'text-indent',
        'text-justify',
        'text-orientation',
        'text-shadow',
        'text-transform',
        'text-anchor',
        'text-wrap',
        'text-align',
        'text-align-last',
        experimentalProperty.text.sizeAdjust,
        'text-combine-upright',
        'text-decoration',
        experimentalProperty.text.decorationSkip,
        'text-decoration-skip-ink',
        'text-decoration-thickness',
        'text-decoration-line',
        'text-decoration-style',
        'text-decoration-color',
        'text-emphasis',
        'text-emphasis-position',
        'text-emphasis-style',
        'text-emphasis-color',
        'text-underline-position',
        'text-underline-offset',
      ]),
      createLogicalGroup('Font', [
        'src',
        'font',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-weight',
        'font-style',
        'font-display',
        'font-palette',
        'font-kerning',
        'font-stretch',
        nonStandardProperty.fontSmooth,
        'font-optical-sizing',
        'font-language-override',
        'font-feature-settings',
        'font-synthesis',
        'font-synthesis-weight',
        'font-synthesis-style',
        'font-synthesis-small-caps',
        'font-variant',
        'font-variant-position',
        'font-variant-ligatures',
        'font-variant-numeric',
        'font-variant-emoji',
        'font-variant-caps',
        'font-variant-east-asian',
        'font-variant-alternates',
        'font-variation-settings',
      ]),
      createLogicalGroup('Math', [
        'math-depth',
        experimentalProperty.mathShift,
        'math-style',
      ]),
      createLogicalGroup('SVG', ['fill', 'stroke', 'paint-order']),
      createLogicalGroup('Color', [
        'color-scheme',
        'accent-color',
        'color',
        'caret-color',
        'forced-color-adjust',
        'print-color-adjust',
      ]),
      createLogicalGroup('Background', [
        'background',
        'background-image',
        'background-color',
        'background-origin',
        'background-size',
        'background-position',
        'background-position-y',
        'background-position-x',
        'background-repeat',
        'background-attachment',
        'background-clip',
        'background-blend-mode',
      ]),
      createLogicalGroup('Filter', [
        experimentalProperty.overlay,
        'filter',
        'backdrop-filter',
        'mix-blend-mode',
        'clip-path',
      ]),
      createLogicalGroup('Transform', [
        'transform',
        'transform-origin',
        'transform-box',
        'transform-style',
        'translate',
        'scale',
        'rotate',
        'will-change',
        'perspective',
        'perspective-origin',
      ]),
      createLogicalGroup('Transition', [
        'transition',
        'transition-property',
        'transition-duration',
        'transition-timing-function',
        'transition-delay',
        experimentalProperty.transitionBehavior,
      ]),
      createLogicalGroup('Animation', [
        'animation',
        'animation-name',
        'animation-duration',
        'animation-timing-function',
        'animation-delay',
        'animation-iteration-count',
        'animation-direction',
        'animation-fill-mode',
        'animation-play-state',
        'animation-composition',
        experimentalProperty.timelineScope,
        experimentalProperty.animation.timeline,
        experimentalProperty.animation.range,
        experimentalProperty.animation.rangeStart,
        experimentalProperty.animation.rangeEnd,
      ]),
      createLogicalGroup('View Timeline', [
        experimentalProperty.view.timeline,
        experimentalProperty.view.timelineName,
        experimentalProperty.view.timelineAxis,
        experimentalProperty.view.timelineInset,
        experimentalProperty.view.transitionName,
      ]),
    ],
    {
      unspecified: 'bottomAlphabetical',
    },
  ],
};

export default propertiesOrder;
